program Stack;
const 
	MAX_LEN = 1000;
	ZERO = 0;
type
	List  = array[ZERO .. MAX_LEN] of real;
	Stack = record
				list	: List;
				idx : integer;
		   end;
var 
	stack : Stack;
	index : integer;
	option: integer; // 选择是要pop(0)还是push(1)还是结束(2)
	element: real;



function get(
	list : List;
	index: integer
) : real;
begin
	get := list[index];
end;

function pop(
	var stack : Stack
) : real;	// 返回结果
begin
	if stack.idx > 0 then begin
		pop := get(stack.list, stack.idx);
		stack.idx := stack.idx - 1;
	end
	else begin
		writeln("[Error]: No more element to be popped!");
	end;
end
;


procedure set(
	element: real;
var
	list : List;
	index: integer
);
begin
	list[index] := element;
end
;

procedure push(
	element   : real;
var 
	stack : Stack
);
begin
	if stack.idx < MAX_LEN then begin
		stack.idx := stack.idx + 1;
		set(element, stack.list, stack.idx);
	end
	else begin
		writeln("[Error]: The stack is full!");
	end;
end
;


begin
	stack.idx := 0;
	writeln("option: [0]: pop	[1]: push	[other]: exit");
	repeat
		read("Please enter your option: ", option);
		if option = 0 then begin
			writeln(pop(stack));	
		end
		else if option = 1 then begin
			read("Please enter the element you want to push: ", element);
			push(element, stack);
		end
		else begin
			option := 2;
		end;
	until option = 2;
end
.
